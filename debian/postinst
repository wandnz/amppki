#!/bin/sh
# postinst script for #PACKAGE#
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
        # TODO actually install these on postinst? or download them as part
        # of building the package and include the files, installing them with
        # the rest of our python scripts in /usr/share/amppki/.
        echo "=============================================================="
        echo "Debian has really old python packages, if you haven't already:"
        echo

        if [ `lsb_release -sc` = "wheezy" ]; then
            echo "pip install pyramid pyramid-chameleon \\"
            echo "\tpyasn1 pyasn1-modules waitress"
            echo "pip install --pre pyramid-assetviews \\"
        else
            echo "pip install pyramid-chameleon"
            echo "pip install --pre pyramid-assetviews \\"
        fi
        echo "=============================================================="

        # the first thing the user will need to do is initialise the CA
        # directory and we don't let them configure it, so just do it now
        if [ ! -d /etc/amppki/ ]; then
            # We also need to generate a cert/key pair to use with apache.
            # The common name needs to match the hostname and it should have
            # BasicConstraints:CA = False
            # TODO this needs manual work if there are multiple FQDNs
            fqdn=`hostname --fqdn` || fqdn=`hostname`
            if [ -n $fqdn ]; then
                /usr/sbin/ampca initialise $fqdn
                echo "Generating certificates for $fqdn (check correct name!)"
            else
                echo "WARNING: Couldn't determine FQDN, no certificate generated!"
            fi
        fi

        if [ ! -f /usr/share/amppki/production.ini ]; then
            cp /usr/share/amppki/production.ini-dist /usr/share/amppki/production.ini
        fi

        # TODO use dh_apache2
        RESTART=false
        if [ -d /etc/apache2/conf-available/ ]; then
            # try to install the config for apache2 in jessie or similar
            if [ ! -e /etc/apache2/conf-available/amppki.conf ]; then
                ln -s /usr/share/amppki/amppki.conf /etc/apache2/conf-available/
                /usr/sbin/a2enconf -q amppki
                RESTART=true
            fi
        elif [ -d /etc/apache2/conf.d/ ]; then
            # try to install the config for apache2 in wheezy or similar
            if [ ! -e /etc/apache2/conf.d/amppki.conf ]; then
                ln -s /usr/share/amppki/amppki.conf /etc/apache2/conf.d/
                RESTART=true
            fi
        else
            echo "ERROR: Couldn't determine apache2 configuration directory"
            exit 1
        fi

        # check if the ssl module is enabled
        if ! apache2ctl -M | awk '{print $1}' | grep -qx ssl_module; then
            # enable the SSL module
            if /usr/sbin/a2enmod -q ssl; then
                RESTART=true
            else
                echo "Failed to enable apache2 ssl module"
            fi
        fi

        if apache2ctl configtest 2>/dev/null; then
            # restart if we enabled the config or the ssl module
            if $RESTART; then
                invoke-rc.d apache2 restart || true
            else
                invoke-rc.d apache2 force-reload || true
            fi
        else
            echo "Your apache2 configuration is broken, please fix it and restart apache2 manually."
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
